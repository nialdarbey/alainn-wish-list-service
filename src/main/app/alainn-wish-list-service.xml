<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:mulexml="http://www.mulesoft.org/schema/mule/xml"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:ws="http://www.mulesoft.org/schema/mule/ws" xmlns:data-mapper="http://www.mulesoft.org/schema/mule/ee/data-mapper" xmlns:https="http://www.mulesoft.org/schema/mule/https"
	xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:cxf="http://www.mulesoft.org/schema/mule/cxf" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" version="EE-3.5.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/xml http://www.mulesoft.org/schema/mule/xml/current/mule-xml.xsd
http://www.mulesoft.org/schema/mule/https http://www.mulesoft.org/schema/mule/https/current/mule-https.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/cxf http://www.mulesoft.org/schema/mule/cxf/current/mule-cxf.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd
http://www.mulesoft.org/schema/mule/ws http://www.mulesoft.org/schema/mule/ws/current/mule-ws.xsd
http://www.mulesoft.org/schema/mule/ee/data-mapper http://www.mulesoft.org/schema/mule/ee/data-mapper/current/mule-data-mapper.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-current.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd">
    
    <https:connector name="httpsConnector" cookieSpec="netscape" validateConnections="true" sendBufferSize="0" receiveBufferSize="0" receiveBacklog="0" clientSoTimeout="10000" serverSoTimeout="10000" socketSoLinger="0" doc:name="HTTP\HTTPS">
        <service-overrides messageFactory="org.mule.transport.http.HttpMultipartMuleMessageFactory" />
        <https:tls-key-store path="keystore.jks" keyPassword="changeit" storePassword="changeit" />
    </https:connector>
    <mulexml:namespace-manager includeConfigNamespaces="true">
        <mulexml:namespace prefix="mes" uri="http://www.alainn.com/SOA/message/1.0" />
        <mulexml:namespace prefix="mod" uri="http://www.alainn.com/SOA/model/1.0" />
    </mulexml:namespace-manager>
    <context:property-placeholder location="config.prod.properties" />
    
    <db:mysql-config name="MySQL_Configuration" host="mule-demo-repository.cdumb7bgzajt.us-east-1.rds.amazonaws.com" port="3306" user="mule" password="Mule1379" database="alainn" doc:name="MySQL Configuration"/>
    
    <flow name="WishListserviceFlow1" doc:name="WishListserviceFlow1">
        <https:inbound-endpoint exchange-pattern="request-response" host="localhost" port="${https.port}" path="wish-list-service" doc:name=":8081/wish-list-service" connector-ref="httpsConnector"/>
        <cxf:proxy-service doc:name="Proxy service" namespace="http://www.alainn.com/SOA/service/WishList/1.0" port="WishListPort" service="WishListService" wsdlLocation="service/WishListService.wsdl" payload="body" >
            <cxf:schemaLocations>
                <cxf:schemaLocation>service/SOA-Message-1.0.xsd</cxf:schemaLocation>
            </cxf:schemaLocations>
        </cxf:proxy-service>
        <set-variable variableName="opName" value="#[xpath('fn:local-name(/*)')]" doc:name="opName"/>
        <choice doc:name="Choice">
            <when expression="#[opName == 'getWishList']">
                <db:select config-ref="MySQL_Configuration" doc:name="select wish">
                    <db:parameterized-query><![CDATA[select si.id, si.name, si.summary, si.price, si.stock_quantity, si.image_url from wish w, sku_item si where w.customer_id = #[xpath:/mes:getWishList/mod:CustomerId] and w.sku_item_id = si.id limit #[Integer.valueOf(xpath('/mes:getWishList/mes:PageInfo/pageIndex/text()').text)],#[Integer.valueOf(xpath('/mes:getWishList/mes:PageInfo/pageSize/text()').text)]]]></db:parameterized-query>
                </db:select>
                
            </when>
            <when expression="#[opName == 'addWish']">
                <db:insert config-ref="MySQL_Configuration" doc:name="insert wish">
                    <db:parameterized-query><![CDATA[ insert into wish(customer_id, sku_item_id) values(#[xpath:/mes:addWish/mod:CustomerId], #[xpath:/mes:addWish/mod:Sku]) ]]></db:parameterized-query>
                </db:insert>
                
            </when>
            <when expression="#[opName == 'removeWish']">
                <db:update config-ref="MySQL_Configuration" doc:name="update wish set !active">
                    <db:parameterized-query><![CDATA[ update wish set active = false where customer_id = #[xpath:/mes:addWish/mod:CustomerId] and sku_item_id = #[xpath:/mes:addWish/mod:Sku]  ]]></db:parameterized-query>
                </db:update>
                
            </when>
            <otherwise>
                <scripting:component doc:name="Exception">
                    <scripting:script engine="Groovy"><![CDATA[throw new RuntimeException("Unknown Operation: " + flowVars.opName);]]></scripting:script>
                </scripting:component>
            </otherwise>
        </choice>

    </flow>
   

</mule>
